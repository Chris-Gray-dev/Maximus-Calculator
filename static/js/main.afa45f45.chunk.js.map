{"version":3,"sources":["Components/ResultsView.jsx","Helpers/AdvantageEnum.js","Helpers/dice.js","Helpers/Attack.js","Components/MaximusForm.jsx","App.js","index.js"],"names":["ResultsView","props","attack","Typography","ToHit","Bludgeoning","Force","Radiant","TotalDamage","NORMAL_ROLL","roll","dieSize","Math","floor","random","d4","d6","d8","d20","toHit","this","state","advantage","AttackDice","toHitArray","max","min","IsCrit","FistDice","roll2","divineFury","DivineFuryDice","giantsMight","GiantsMightDice","potionOfGrowth","PotionOfGrowthDice","eldritchMaul","EldritchMaulDice","rage","radiantConsumption","Attack","DEFAULT_STATE","useStyles","makeStyles","theme","root","margin","spacing","MaximusForm","React","useState","setAttack","classes","setState","handleChange","event","target","name","checked","className","FormControl","component","FormLabel","RadioGroup","aria-label","value","onChange","FormControlLabel","control","Radio","label","Switch","Button","variant","color","onClick","doAttack","Card","CardContent","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afa45f45.chunk.js","sourcesContent":["import Typography from '@material-ui/core/Typography';\r\nfunction ResultsView(props)\r\n{\r\n    let attack = props.attack \r\n    if(attack === null)\r\n    {\r\n        return(<></>)\r\n    }\r\n    return(\r\n        \r\n        <div>\r\n            <Typography>To hit: {attack.ToHit}</Typography>\r\n            <Typography>Bludgeoning: {attack.Bludgeoning}</Typography>\r\n            <Typography>Force: {attack.Force}</Typography>\r\n            <Typography>Radiant: {attack.Radiant}</Typography>\r\n            <Typography>Total: {attack.TotalDamage}</Typography>            \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default ResultsView","const NORMAL_ROLL  = \"norm\"\r\nconst ADVANTAGE    = \"adv\"\r\nconst DISADVANTAGE = \"disadv\"\r\n\r\nexport {NORMAL_ROLL,ADVANTAGE,DISADVANTAGE}","function roll(dieSize)\r\n{\r\n    return Math.floor(Math.random() * (dieSize) + 1);\r\n}\r\n\r\nfunction d4()\r\n{\r\n    return roll(4)\r\n}\r\n\r\nfunction d6()\r\n{\r\n    return roll(6)\r\n}\r\n\r\nfunction d8()\r\n{\r\n    return roll(8)\r\n}\r\n\r\nfunction d20()\r\n{\r\n    return roll(20)\r\n}\r\n\r\nexport{d4,d6,d8,d20}\r\n\r\n\r\n","import {NORMAL_ROLL,ADVANTAGE,DISADVANTAGE} from \"./AdvantageEnum\"\r\nimport {d4,d6,d8,d20} from \"./dice\"\r\n\r\nclass Attack\r\n{\r\n    #TO_HIT\r\n    #TO_DMG\r\n    #DIVINE_FURY_DMG\r\n    #RAGE_DMG\r\n    #RADIANT_CONSUMPTION_DMG\r\n\r\n    constructor(state)\r\n    {\r\n        this.state = state\r\n\r\n        this.#TO_HIT = 13\r\n        this.#TO_DMG = 9\r\n        this.#DIVINE_FURY_DMG = 4   \r\n        this.#RAGE_DMG = 2\r\n        this.#RADIANT_CONSUMPTION_DMG = 11\r\n\r\n        this.IsCrit = false\r\n\r\n        // Numbers\r\n        this.ToHit       = 0\r\n        this.TotalDamage = 0 \r\n        this.Bludgeoning = 0\r\n        this.Force       = 0\r\n        this.Radiant     = 0\r\n\r\n        // Dice\r\n        this.AttackDice         = [0,0]\r\n        this.FistDice           = [0,0]\r\n        this.GiantsMightDice    = [0,0]\r\n        this.PotionOfGrowthDice = [0,0]\r\n        this.EldritchMaulDice   = [0,0]\r\n        this.DivineFuryDice     = [0,0]\r\n    }\r\n\r\n    #CalcToHit()\r\n    {\r\n        let toHit = -1\r\n\r\n        if(this.state.advantage === NORMAL_ROLL)\r\n        {\r\n            toHit = d20()\r\n            this.AttackDice[0] = toHit\r\n        }\r\n        else\r\n        {\r\n            let toHitArray = [d20(),d20()]\r\n            this.AttackDice = toHitArray\r\n\r\n            if(this.state.advantage === ADVANTAGE)\r\n            {\r\n                toHit = Math.max(...toHitArray)\r\n            }\r\n            else\r\n            {\r\n                toHit = Math.min(...toHitArray)\r\n            }\r\n        }\r\n\r\n        if(toHit === 20)\r\n        {\r\n            this.IsCrit = true\r\n        }\r\n\r\n        this.ToHit = toHit + this.#TO_HIT\r\n    }\r\n\r\n    #CalcFistDamage()\r\n    {\r\n        let roll = d8()\r\n        this.FistDice[0] = roll\r\n        this.Bludgeoning += roll\r\n\r\n        if(this.IsCrit)\r\n        {\r\n            let roll2 = d8()\r\n            this.FistDice[1] = roll2\r\n            this.Bludgeoning += roll2\r\n        }\r\n\r\n        this.Bludgeoning += this.#TO_DMG \r\n    }\r\n\r\n    #CalcDivineFuryDamage()\r\n    {\r\n        if(this.state.divineFury)\r\n        {\r\n            let roll = d6()\r\n            this.DivineFuryDice[0] = roll\r\n            this.Radiant += roll\r\n            \r\n            if(this.IsCrit)\r\n            {\r\n                let roll2 = d6()\r\n                this.DivineFuryDice[1] = roll2\r\n                this.Radiant += roll2\r\n            }\r\n\r\n            this.Radiant += this.#DIVINE_FURY_DMG\r\n        }\r\n    }\r\n\r\n    #CalcGiantsMightDamage()\r\n    {\r\n        if(this.state.giantsMight)\r\n        {\r\n            let roll = d6()\r\n            this.GiantsMightDice[0] = roll\r\n            this.Bludgeoning += roll\r\n            \r\n            if(this.IsCrit)\r\n            {\r\n                let roll2 = d6()\r\n                this.GiantsMightDice[1] = roll2\r\n                this.Bludgeoning += roll2\r\n            }\r\n        }\r\n    }\r\n\r\n    #CalcPotionOfGrowthDamage()\r\n    {\r\n        if(this.state.potionOfGrowth)\r\n        {\r\n            let roll = d4()\r\n            this.PotionOfGrowthDice[0] = roll\r\n            this.Bludgeoning += roll\r\n            \r\n            if(this.IsCrit)\r\n            {\r\n                let roll2 = d4()\r\n                this.PotionOfGrowthDice[1] = roll2\r\n                this.Bludgeoning += roll2\r\n            }\r\n        }\r\n    }\r\n\r\n    #CalcEldritchMaulDamage()\r\n    {\r\n        if(this.state.eldritchMaul)\r\n        {\r\n            let roll = d6()\r\n            this.EldritchMaulDice[0] = roll\r\n            this.Force += roll\r\n            \r\n            if(this.IsCrit)\r\n            {\r\n                let roll2 = d6()\r\n                this.EldritchMaulDice[1] = roll2\r\n                this.Force += roll2\r\n            }\r\n        }\r\n    }\r\n\r\n    #CalcRageDamage()\r\n    {\r\n        if(this.state.rage)\r\n        {\r\n            this.Bludgeoning += this.#RAGE_DMG\r\n        }\r\n    }\r\n\r\n    #CalcRadiantConsumption()\r\n    {\r\n        if(this.state.radiantConsumption)\r\n        {\r\n            this.Radiant += this.#RADIANT_CONSUMPTION_DMG\r\n        }\r\n    }\r\n\r\n    doAttack()\r\n    {\r\n        this.#CalcToHit()\r\n        this.#CalcFistDamage()\r\n\r\n        this.#CalcRageDamage()\r\n        this.#CalcEldritchMaulDamage()\r\n        this.#CalcPotionOfGrowthDamage()\r\n\r\n        this.#CalcDivineFuryDamage()\r\n        this.#CalcGiantsMightDamage()\r\n        this.#CalcRadiantConsumption()\r\n\r\n        this.TotalDamage = this.Bludgeoning + this.Radiant + this.Force\r\n    }\r\n}\r\n\r\nexport default Attack","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Button from '@material-ui/core/Button';\r\nimport ResultsView from './ResultsView'\r\nimport Attack from \"../Helpers/Attack\";\r\n\r\n\r\nimport {NORMAL_ROLL,ADVANTAGE,DISADVANTAGE} from \"../Helpers/AdvantageEnum\"\r\n\r\nconst DEFAULT_STATE = {\r\n    advantage         : NORMAL_ROLL,\r\n    divineFury        : false,\r\n    rage              : false,\r\n    giantsMight       : false,\r\n    eldritchMaul      : false,\r\n    radiantConsumption: false,\r\n    potionOfGrowth    : false\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }));\r\n\r\nfunction MaximusForm()\r\n{\r\n    const [attack, setAttack] = React.useState(null)\r\n    const classes = useStyles();\r\n\r\n      const [state, setState] = React.useState(DEFAULT_STATE);\r\n    \r\n      const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n      };\r\n\r\n      const handleAdvantageChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.value })\r\n      };\r\n\r\n\r\n      const roll =()=>{\r\n        let attack = new Attack(state) \r\n        attack.doAttack()\r\n        setAttack(attack)\r\n\r\n      }\r\n      const reset = ()=>{\r\n          setState(DEFAULT_STATE)\r\n          setAttack(null)\r\n      }\r\n\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.root}>\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Advantage / Disadvantage</FormLabel>\r\n                <RadioGroup aria-label=\"Advantage\" name=\"Advantage\" value={state.advantage} onChange={handleAdvantageChange}>\r\n                    <FormControlLabel value={NORMAL_ROLL}  control={<Radio />} name=\"advantage\" label=\"None\" />\r\n                    <FormControlLabel value={ADVANTAGE}    control={<Radio />} name=\"advantage\" label=\"Advantage\" />\r\n                    <FormControlLabel value={DISADVANTAGE} control={<Radio />} name=\"advantage\" label=\"Disadvantage\" />\r\n                </RadioGroup>\r\n\r\n                <br/>\r\n\r\n                <FormLabel component=\"legend\">Modifiers</FormLabel>\r\n                \r\n                <br/>\r\n\r\n                <FormLabel component=\"legend\">Every hit</FormLabel>\r\n                <FormControlLabel\r\n                    control={<Switch checked={state.rage} onChange={handleChange} name=\"rage\" />}\r\n                    label=\"Rage (+2 bludgeoning)\"\r\n                />\r\n                <FormControlLabel\r\n                    control={<Switch checked={state.eldritchMaul} onChange={handleChange} name=\"eldritchMaul\" />}\r\n                    label=\"Eldritch Maul (+1d6 force)\"\r\n                />\r\n                <FormControlLabel\r\n                    control={<Switch checked={state.potionOfGrowth} onChange={handleChange} name=\"potionOfGrowth\" />}\r\n                    label=\"Potion of Growth (+1d4 bludegoning)\"\r\n                />\r\n\r\n                <br/>\r\n                \r\n                <FormLabel component=\"legend\">Once per turn</FormLabel>\r\n                <FormControlLabel\r\n                    control={<Switch checked={state.divineFury} onChange={handleChange} name=\"divineFury\" />}\r\n                    label=\"Divine Fury (+1d6+4 radiant)\"\r\n                />\r\n                <FormControlLabel\r\n                    control={<Switch checked={state.giantsMight} onChange={handleChange} name=\"giantsMight\" />}\r\n                    label=\"Giants Might (+1d6 bludgeoning)\"\r\n                />\r\n                <FormControlLabel\r\n                    control={<Switch checked={state.radiantConsumption} onChange={handleChange} name=\"radiantConsumption\" />}\r\n                    label=\"Radiant Consumption (+11 radiant)\"\r\n                />\r\n\r\n                <br/>\r\n                \r\n                <div className={classes.root}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={roll} >Roll</Button>\r\n                    <Button variant=\"contained\" onClick={reset}>Reset</Button>\r\n                </div>\r\n            </FormControl>\r\n            </div>\r\n\r\n            <div>\r\n            <Card variant=\"outlined\">\r\n                <CardContent>\r\n                    <ResultsView attack={attack}/>\r\n                </CardContent>\r\n            </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MaximusForm","import MaximusForm from \"./Components/MaximusForm\"\nfunction App() \n{\n\n  return (\n    <div>\n        <MaximusForm/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '@fontsource/roboto';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}