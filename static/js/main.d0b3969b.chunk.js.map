{"version":3,"sources":["Components/DamageResults.jsx","Components/ResultsView.jsx","Helpers/AdvantageEnum.js","Helpers/dice.js","Helpers/Attack.js","Components/MaximusForm.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","DamageResults","props","classes","attack","Accordion","className","AccordionSummary","expandIcon","aria-controls","id","Typography","TotalDamage","AccordionDetails","Bludgeoning","Force","Radiant","strike","textDecorationStyle","ResultsView","Box","Card","variant","CardContent","AttackDice","style","textDecoration","TO_HIT","ToHit","IsCrit","IsFail","NORMAL_ROLL","roll","dieSize","Math","floor","random","d4","d6","d8","d20","toHit","this","state","advantage","toHitArray","max","sort","a","b","min","FistDice","roll2","TO_DMG","divineFury","DivineFuryDice","DIVINE_FURY_DMG","giantsMight","GiantsMightDice","potionOfGrowth","PotionOfGrowthDice","eldritchMaul","EldritchMaulDice","rage","RAGE_DMG","radiantConsumption","RADIANT_CONSUMPTION_DMG","Attack","DEFAULT_STATE","margin","spacing","MaximusForm","React","useState","setAttack","setState","handleChange","event","target","name","checked","FormControl","component","FormLabel","RadioGroup","aria-label","value","onChange","FormControlLabel","control","Radio","label","Switch","Button","color","onClick","doAttack","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0b3969b.chunk.js","sourcesContent":["import Typography from '@material-ui/core/Typography';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n  }));\r\n\r\n\r\nfunction DamageResults(props)\r\n{\r\n    const classes = useStyles();\r\n    let attack = props.attack\r\n\r\n    return(\r\n        <Accordion className={classes.heading} >\r\n                <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                >\r\n                    <Typography>Damage Total: {attack.TotalDamage}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <div>\r\n                    <Typography>Bludgeoning: {attack.Bludgeoning}</Typography>\r\n                    {attack.Force > 0 && <Typography>Force: {attack.Force}</Typography>}            \r\n                    {attack.Radiant > 0 && <Typography>Radiant: {attack.Radiant}</Typography>}\r\n                    </div>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n    )\r\n}\r\n\r\nexport default DamageResults","import Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport DamageResults from \"./DamageResults\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    strike: {\r\n        textDecorationStyle: 'linethrough'\r\n    },\r\n  }));\r\n\r\nfunction ResultsView(props)\r\n{\r\n    const classes = useStyles()\r\n\r\n    let attack = props.attack \r\n    if(attack === null)\r\n    {\r\n        return(<></>)\r\n    }\r\n    return(\r\n        <Box width=\"20%\">\r\n        <Card variant=\"outlined\">\r\n        <CardContent>\r\n            <Typography >\r\n                    To hit ({attack.AttackDice[0]} {attack.AttackDice[1] > 0 && <span>,<span style={{textDecoration:\"line-through\"}}>{attack.AttackDice[1]}</span></span>} + {attack.TO_HIT}): {attack.ToHit} \r\n                    {attack.IsCrit && <span style={{fontWeight:\"bold\"}}> CRITICAL HIT!</span>} \r\n                    {attack.IsFail && <span style={{fontWeight:\"bold\"}}> CRITICAL MISS!</span>} \r\n            </Typography>\r\n            {!attack.IsFail && <DamageResults attack={attack}/> }\r\n        </CardContent>\r\n        </Card>                   \r\n        </Box>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default ResultsView","const NORMAL_ROLL  = \"norm\"\r\nconst ADVANTAGE    = \"adv\"\r\nconst DISADVANTAGE = \"disadv\"\r\n\r\nexport {NORMAL_ROLL,ADVANTAGE,DISADVANTAGE}","function roll(dieSize)\r\n{\r\n    return Math.floor(Math.random() * (dieSize) + 1);\r\n}\r\n\r\nfunction d4()\r\n{\r\n    return roll(4)\r\n}\r\n\r\nfunction d6()\r\n{\r\n    return roll(6)\r\n}\r\n\r\nfunction d8()\r\n{\r\n    return roll(8)\r\n}\r\n\r\nfunction d20()\r\n{\r\n    return roll(20)\r\n}\r\n\r\nexport{d4,d6,d8,d20}\r\n\r\n\r\n","import {NORMAL_ROLL,ADVANTAGE,DISADVANTAGE} from \"./AdvantageEnum\"\r\nimport {d4,d6,d8,d20} from \"./dice\"\r\n\r\nclass Attack\r\n{\r\n\r\n    constructor(state)\r\n    {\r\n        this.state = state\r\n\r\n        this.TO_HIT = 13\r\n        this.TO_DMG = 9\r\n        this.DIVINE_FURY_DMG = 4   \r\n        this.RAGE_DMG = 2\r\n        this.RADIANT_CONSUMPTION_DMG = 11\r\n\r\n        this.IsCrit = false\r\n        this.IsFail = false\r\n        // Numbers\r\n        this.ToHit       = 0\r\n        this.TotalDamage = 0 \r\n        this.Bludgeoning = 0\r\n        this.Force       = 0\r\n        this.Radiant     = 0\r\n\r\n        // Dice\r\n        this.AttackDice         = [0,0]\r\n        this.FistDice           = [0,0]\r\n        this.GiantsMightDice    = [0,0]\r\n        this.PotionOfGrowthDice = [0,0]\r\n        this.EldritchMaulDice   = [0,0]\r\n        this.DivineFuryDice     = [0,0]\r\n    }\r\n\r\n    #CalcToHit()\r\n    {\r\n        let toHit = -1\r\n\r\n        if(this.state.advantage === NORMAL_ROLL)\r\n        {\r\n            toHit = d20()\r\n            this.AttackDice[0] = toHit\r\n        }\r\n        else\r\n        {\r\n            let toHitArray = [d20(),d20()]\r\n            \r\n            if(this.state.advantage === ADVANTAGE)\r\n            {\r\n                toHit = Math.max(...toHitArray)\r\n                toHitArray.sort(function(a, b){return b - a})\r\n            }\r\n            else\r\n            {\r\n                toHit = Math.min(...toHitArray)\r\n                toHitArray.sort(function(a, b){return a - b})\r\n            }\r\n            this.AttackDice = toHitArray\r\n\r\n        }\r\n\r\n        if(toHit === 20)\r\n        {\r\n            this.IsCrit = true\r\n        }\r\n        else if(toHit === 1)\r\n        {\r\n            this.IsFail = true\r\n        }\r\n\r\n        this.ToHit = toHit + this.TO_HIT\r\n    }\r\n\r\n    #CalcFistDamage()\r\n    {\r\n        let roll = d8()\r\n        this.FistDice[0] = roll\r\n        this.Bludgeoning += roll\r\n\r\n        if(this.IsCrit)\r\n        {\r\n            let roll2 = d8()\r\n            this.FistDice[1] = roll2\r\n            this.Bludgeoning += roll2\r\n        }\r\n\r\n        this.Bludgeoning += this.TO_DMG \r\n    }\r\n\r\n    #CalcDivineFuryDamage()\r\n    {\r\n        if(this.state.divineFury)\r\n        {\r\n            let roll = d6()\r\n            this.DivineFuryDice[0] = roll\r\n            this.Radiant += roll\r\n            \r\n            if(this.IsCrit)\r\n            {\r\n                let roll2 = d6()\r\n                this.DivineFuryDice[1] = roll2\r\n                this.Radiant += roll2\r\n            }\r\n\r\n            this.Radiant += this.DIVINE_FURY_DMG\r\n        }\r\n    }\r\n\r\n    #CalcGiantsMightDamage()\r\n    {\r\n        if(this.state.giantsMight)\r\n        {\r\n            let roll = d6()\r\n            this.GiantsMightDice[0] = roll\r\n            this.Bludgeoning += roll\r\n            \r\n            if(this.IsCrit)\r\n            {\r\n                let roll2 = d6()\r\n                this.GiantsMightDice[1] = roll2\r\n                this.Bludgeoning += roll2\r\n            }\r\n        }\r\n    }\r\n\r\n    #CalcPotionOfGrowthDamage()\r\n    {\r\n        if(this.state.potionOfGrowth)\r\n        {\r\n            let roll = d4()\r\n            this.PotionOfGrowthDice[0] = roll\r\n            this.Bludgeoning += roll\r\n            \r\n            if(this.IsCrit)\r\n            {\r\n                let roll2 = d4()\r\n                this.PotionOfGrowthDice[1] = roll2\r\n                this.Bludgeoning += roll2\r\n            }\r\n        }\r\n    }\r\n\r\n    #CalcEldritchMaulDamage()\r\n    {\r\n        if(this.state.eldritchMaul)\r\n        {\r\n            let roll = d6()\r\n            this.EldritchMaulDice[0] = roll\r\n            this.Force += roll\r\n            \r\n            if(this.IsCrit)\r\n            {\r\n                let roll2 = d6()\r\n                this.EldritchMaulDice[1] = roll2\r\n                this.Force += roll2\r\n            }\r\n        }\r\n    }\r\n\r\n    #CalcRageDamage()\r\n    {\r\n        if(this.state.rage)\r\n        {\r\n            this.Bludgeoning += this.RAGE_DMG\r\n        }\r\n    }\r\n\r\n    #CalcRadiantConsumption()\r\n    {\r\n        if(this.state.radiantConsumption)\r\n        {\r\n            this.Radiant += this.RADIANT_CONSUMPTION_DMG\r\n        }\r\n    }\r\n\r\n    doAttack()\r\n    {\r\n        this.#CalcToHit()\r\n        this.#CalcFistDamage()\r\n\r\n        this.#CalcRageDamage()\r\n        this.#CalcEldritchMaulDamage()\r\n        this.#CalcPotionOfGrowthDamage()\r\n\r\n        this.#CalcDivineFuryDamage()\r\n        this.#CalcGiantsMightDamage()\r\n        this.#CalcRadiantConsumption()\r\n\r\n        this.TotalDamage = this.Bludgeoning + this.Radiant + this.Force\r\n    }\r\n}\r\n\r\nexport default Attack","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Button from '@material-ui/core/Button';\r\nimport ResultsView from './ResultsView'\r\nimport Attack from \"../Helpers/Attack\";\r\n\r\n\r\nimport {NORMAL_ROLL,ADVANTAGE,DISADVANTAGE} from \"../Helpers/AdvantageEnum\"\r\n\r\nconst DEFAULT_STATE = {\r\n    advantage         : NORMAL_ROLL,\r\n    divineFury        : false,\r\n    rage              : false,\r\n    giantsMight       : false,\r\n    eldritchMaul      : false,\r\n    radiantConsumption: false,\r\n    potionOfGrowth    : false\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }));\r\n\r\nfunction MaximusForm()\r\n{\r\n    const [attack, setAttack] = React.useState(null)\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useState(DEFAULT_STATE);\r\n\r\n    const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    const handleAdvantageChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.value })\r\n    };\r\n\r\n\r\n    const roll =()=>{\r\n    let attack = new Attack(state) \r\n    attack.doAttack()\r\n    setAttack(attack)\r\n    }\r\n    \r\n    const reset = ()=>{\r\n        setState(DEFAULT_STATE)\r\n        setAttack(null)\r\n    }\r\n\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.root}>\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Advantage / Disadvantage</FormLabel>\r\n                <RadioGroup aria-label=\"Advantage\" name=\"Advantage\" value={state.advantage} onChange={handleAdvantageChange}>\r\n                    <FormControlLabel value={NORMAL_ROLL}  control={<Radio />} name=\"advantage\" label=\"None\" />\r\n                    <FormControlLabel value={ADVANTAGE}    control={<Radio />} name=\"advantage\" label=\"Advantage\" />\r\n                    <FormControlLabel value={DISADVANTAGE} control={<Radio />} name=\"advantage\" label=\"Disadvantage\" />\r\n                </RadioGroup>\r\n\r\n                <br/>\r\n\r\n                <FormLabel component=\"legend\">Modifiers</FormLabel>\r\n                \r\n                <br/>\r\n\r\n                <FormLabel component=\"legend\">Every hit</FormLabel>\r\n                <FormControlLabel\r\n                    control={<Switch checked={state.rage} onChange={handleChange} name=\"rage\" />}\r\n                    label=\"Rage (+2 bludgeoning)\"\r\n                />\r\n                <FormControlLabel\r\n                    control={<Switch checked={state.eldritchMaul} onChange={handleChange} name=\"eldritchMaul\" />}\r\n                    label=\"Eldritch Maul (+1d6 force)\"\r\n                />\r\n                <FormControlLabel\r\n                    control={<Switch checked={state.potionOfGrowth} onChange={handleChange} name=\"potionOfGrowth\" />}\r\n                    label=\"Potion of Growth (+1d4 bludegoning)\"\r\n                />\r\n\r\n                <br/>\r\n                \r\n                <FormLabel component=\"legend\">Once per turn</FormLabel>\r\n                <FormControlLabel\r\n                    control={<Switch checked={state.divineFury} onChange={handleChange} name=\"divineFury\" />}\r\n                    label=\"Divine Fury (+1d6+4 radiant)\"\r\n                />\r\n                <FormControlLabel\r\n                    control={<Switch checked={state.giantsMight} onChange={handleChange} name=\"giantsMight\" />}\r\n                    label=\"Giants Might (+1d6 bludgeoning)\"\r\n                />\r\n                <FormControlLabel\r\n                    control={<Switch checked={state.radiantConsumption} onChange={handleChange} name=\"radiantConsumption\" />}\r\n                    label=\"Radiant Consumption (+11 radiant)\"\r\n                />\r\n\r\n                <br/>\r\n                \r\n                <div className={classes.root}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={roll} >Roll</Button>\r\n                    <Button variant=\"contained\" onClick={reset}>Reset</Button>\r\n                </div>\r\n            </FormControl>\r\n            </div>\r\n\r\n            <div>\r\n            <ResultsView attack={attack}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MaximusForm","import MaximusForm from \"./Components/MaximusForm\"\nfunction App() \n{\n\n  return (\n    <div>\n        <MaximusForm/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '@fontsource/roboto';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}